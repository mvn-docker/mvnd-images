sudo: required

services:
  - docker

install: 
  - docker pull "${BASE_IMAGE}"

before_script:
  - npm install -g envhandlebars

script:
  - envhandlebars < template.Dockerfile > Dockerfile
  - docker build -f Dockerfile -t ${IMAGE} .
  # on master builds publish `LATEST` and `build-*` images
  # travis flatten the if in a single line, so `;` is a must
  - if [[ "${TRAVIS_BRANCH}" == "master" ]]; then
      TAG="build-${TRAVIS_BUILD_NUMBER}";
      docker login -u $DOCKER_USER -p $DOCKER_PASS;
      docker tag ${IMAGE} ${IMAGE}:${TAG};
      docker push ${IMAGE};
      docker push ${IMAGE}:${TAG};
    fi


matrix:
  include:
    - env: BASE_IMAGE="ubuntu:14.04" JAVA_DISTRIBUTION="openjdk" JAVA_VERSION="6" MAVEN_VERSION="3.2.5"
    - env: BASE_IMAGE="ubuntu:14.04" JAVA_DISTRIBUTION="openjdk" JAVA_VERSION="7" MAVEN_VERSION="3.5.3"
    - env: BASE_IMAGE="ubuntu:16.04" JAVA_DISTRIBUTION="openjdk" JAVA_VERSION="8" MAVEN_VERSION="3.5.3"
    - env: BASE_IMAGE="ubuntu:17.10" JAVA_DISTRIBUTION="openjdk" JAVA_VERSION="8" MAVEN_VERSION="3.3.9"
    - env: BASE_IMAGE="ubuntu:17.10" JAVA_DISTRIBUTION="openjdk" JAVA_VERSION="8" MAVEN_VERSION="3.5.3"
    - env: BASE_IMAGE="ubuntu:17.10" JAVA_DISTRIBUTION="openjdk" JAVA_VERSION="9" MAVEN_VERSION="3.5.3"
    - env: BASE_IMAGE="ubuntu:18.04" JAVA_DISTRIBUTION="openjdk-ea" JAVA_VERSION="10" MAVEN_VERSION="3.5.3"
    - env: BASE_IMAGE="ubuntu:17.10" JAVA_DISTRIBUTION="oraclejdk" JAVA_VERSION="8" MAVEN_VERSION="3.3.9"
    - env: BASE_IMAGE="ubuntu:17.10" JAVA_DISTRIBUTION="oraclejdk" JAVA_VERSION="8" MAVEN_VERSION="3.5.3"
    - env: BASE_IMAGE="ubuntu:17.10" JAVA_DISTRIBUTION="oraclejdk" JAVA_VERSION="9" MAVEN_VERSION="3.5.3"
    - env: BASE_IMAGE="alpine:3.6" JAVA_DISTRIBUTION="openjdk" JAVA_VERSION="7" MAVEN_VERSION="3.3.9"
    - env: BASE_IMAGE="alpine:3.6" JAVA_DISTRIBUTION="openjdk" JAVA_VERSION="7" MAVEN_VERSION="3.5.3"
    - env: BASE_IMAGE="alpine:3.6" JAVA_DISTRIBUTION="openjdk" JAVA_VERSION="8" MAVEN_VERSION="3.5.3"
    
env:
  global:
  # DOCKER_EMAIL
  - secure: d7hRu2aPKBeLw/e4SkKbsp8JFSoTgOJja6zdruz5hBmzxA8Bz/Kg7G5B8SBclhMv+GXLvIuj3XzIT1VvWo3hxsBMoq7DSa/j9s0uSFYd1bObab6ydRvC4v6srP6Af17gILxyEAJX0eIo9XDmEAUhQ4iN9n+kmKbxPClSJp8wYjZ4xWatl2LNFWuzJnflayKtBN9VI+fI1LuXpdlONI35ep0tAdW0JkVnTa8Xlp74lunKc30ecNxzBuU5xykYcrPE3yeKfJRQrheRyNCx1YSg7mFzRuhJUhW/EwN2WPrJqNCyHc5PSNzPW51IcmJOP4MLPmnN5cso+uXx90jR8vH2i7vomqxFR72vbuLqU/XpGvqBLFVXTpHLdRoLAuxu3uPt2BvCPzqAT/gF8sIvYXQ/XPiaZXupfCCSf8g06VuDXqasYQiGZfXafK3+KMUtyA7oiYGcf8IEWL6dgkf7B26YFOSPDqH8M2sDrbbNcsGClv4SrdC4L6FcbzWwZEl6k8J62AVAHFAnnGw9/W2uAmrbuJ4PmmB3GJip05Fev+vaKDuB3Db+kuNK8bCpY50oS3sEqbDzNZWqb76K/ddf92zVS3aOxp/IjUqss5nFEgdHZTHK7/QzZo0WQiJnyBOLw1FZz8H730zcTTv6HjyIY5mY6rNy8awT/j1sj/r1lj0C7QM=
  # DOCKER_USER
  - secure: OLNsvO3lkeCXVHSTtUIn5TYXP/PJ7XLSxdpwHM7WiTr1huRJ3qQDH0YUcxZxUfBennXS8R5Lex13AYjGWiV3LNM31hq2Beuv07w1q6iI/PYom4BcMGzUNR6rErSVlnf9wmU4RhTUYyGYErl6WFenpO64H32NMdjSCLxBXyCK1IS1OU+MW5vqGRGQzxKRLD1k5DJcEwTPOKMLRSbCuWw2qvwP6EBr7mhs1MAswwe7vz0MQ+FUzT6JNZx3dosVtsguV7UqCZZ7z39argpoMzfpwb3F1QUTeL5UqenBKKMjWVC+WKk+/iQ5wp4G2j1cKSGGeObmu2Byf+sN3QWj2QbcPdx8ywJw3uLTaFbOHP2pAnxdwl8PCz4qHRi8OK8Dk7t0fOxb1JDRewPxQH8Q4yhQEjuVf4fnE2Ui8qz8G0XmcKwyYGMK5n/H2N/iexvsQa+6xxjQlU4oJ0QC6Tu/noJoJQ40P58Ud+5eMJwtVL3HOvyYRk7qQas6/FDc8wJE87Zqaw5GLF30rt/Kh5b65tSLNqzJ2QnAPzURI6fy3WV0QdHGx3XfWylecGM7sgwg1/mPffSY64U0n1DDK3hEnBOKZz6jt10GDILXC0QDwKlQAFVc6J0R17NL9Nv83gYjwiFhZcH/MIV/JwcdobbrDaSBbNSQRcV36CpLt+GkEIos9eg=
  # DOCKER_PASS
  - secure: Yfhu8ikVX7qyk6F7h0iPqT99szB2TJXUghpkpv04LCTPV+IU7aWp9GuHKsXX0uJEkdFp6KVbqo4LFLJLrMe1O3PpOBDZZZ3EilW3jSeBipo1IqzybxjwLmNbCd6FzRiOAF9q2Mc4Dpn0nw+C0YITcY+Q/T0IX+XgKpJM8GdpDl9xqOh6CG8LyZwJq14WVhYPcbuoZvnUsObd57li5mlcqHIg0sLD9cPP4dj4qypACCun/kiQmQ+O3HVZMB2KjwDdhwgUPMgLihJPtrhsV9Ifm6b848zU5E6QgrBYG5gkWqeeQp9V5o4l/SEsGQ6313cTIEqjWWyOFsQ5k17eCgloYSOQyBIId0tUCglGfsDBgypWPJy/FWw/mqmV4u6aSX7BGhWU3zcxzQc6MXL3B+rhZ0R9n0VTw21+8xstrEvUZyE1eoO6Bmy/t8PtosLNabuEywYV7llQkV777d7HKJPegRDs61nXp8apXTqrTKEGJ9Bw8Q3pbn6F38hWoS4XHce9JYd1K9+tA1lKLtgjSG5kKcsSvZs7HynzW98C+d1kYxkMWmVW0RN15lEbfOAPSGyeRy1ZG/d+A9ebqYdZHXPYv4l2lI83klU26fI/o21e0b8VJOdK5pFn8STzyFnNGi9HY6v0p2PsADqWaLlsTdDYUKEek6UStwVgpLfxIiJgWwE=

before_cache:
  - go get github.com/tonistiigi/buildcache/cmd/buildcache
  # Save tagged docker images
  - mkdir -p ${HOME}/docker
  - buildcache save -o ${HOME}/docker/cache.tgz ${IMAGE}

before_install:
  - export OS=${BASE_IMAGE//:*/}
  - export IMAGE=mvnd/"${BASE_IMAGE//[^[:alnum:]]/_}-${JAVA_DISTRIBUTION}-${JAVA_VERSION}-${MAVEN_VERSION}"
  # Load cached docker images
  - if [[ -f ${HOME}/docker/cache.tgz ]]; then 
      docker pull "${IMAGE}";
      docker load -i ${HOME}/docker/cache.tgz; 
    fi

cache:
  bundler: true
  directories:
    - ${HOME}/docker
