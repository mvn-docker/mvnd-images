sudo: required

services:
  - docker

install: 
  - docker pull "${BASE_IMAGE}"

before_script:
  - npm install -g envhandlebars

script:
  - envhandlebars < template.Dockerfile > Dockerfile
  - docker build -f Dockerfile -t ${IMAGE} .
  # on master builds publish `LATEST` and `build-*` images
  # travis flatten the if in a single line, so `;` is a must
  - if [[ "${TRAVIS_BRANCH}" == "master" ]]; then
      TAG="build-${TRAVIS_BUILD_NUMBER}";
      docker login -u $DOCKER_USER -p $DOCKER_PASS;
      docker tag ${IMAGE} ${IMAGE}:${TAG};
      docker push ${IMAGE};
      docker push ${IMAGE}:${TAG};
    fi


matrix:
  include:
    - env: BASE_IMAGE="ubuntu:14.04" JAVA_DISTRIBUTION="openjdk" JAVA_VERSION="6" MAVEN_VERSION="3.2.5"
    - env: BASE_IMAGE="ubuntu:14.04" JAVA_DISTRIBUTION="openjdk" JAVA_VERSION="7" MAVEN_VERSION="3.5.3"
    - env: BASE_IMAGE="ubuntu:16.04" JAVA_DISTRIBUTION="openjdk" JAVA_VERSION="8" MAVEN_VERSION="3.5.3"
    - env: BASE_IMAGE="ubuntu:17.10" JAVA_DISTRIBUTION="openjdk" JAVA_VERSION="8" MAVEN_VERSION="3.3.9"
    - env: BASE_IMAGE="ubuntu:17.10" JAVA_DISTRIBUTION="openjdk" JAVA_VERSION="8" MAVEN_VERSION="3.5.3"
    - env: BASE_IMAGE="ubuntu:17.10" JAVA_DISTRIBUTION="openjdk" JAVA_VERSION="10" MAVEN_VERSION="3.5.3"
    - env: BASE_IMAGE="ubuntu:18.04" JAVA_DISTRIBUTION="openjdk" JAVA_VERSION="10" MAVEN_VERSION="3.5.3"
    - env: BASE_IMAGE="ubuntu:19.04" JAVA_DISTRIBUTION="openjdk" JAVA_VERSION="11" MAVEN_VERSION="3.6.1"
    - env: BASE_IMAGE="ubuntu:17.10" JAVA_DISTRIBUTION="oraclejdk" JAVA_VERSION="8" MAVEN_VERSION="3.3.9"
    - env: BASE_IMAGE="ubuntu:17.10" JAVA_DISTRIBUTION="oraclejdk" JAVA_VERSION="8" MAVEN_VERSION="3.5.3"
    - env: BASE_IMAGE="alpine:3.6" JAVA_DISTRIBUTION="openjdk" JAVA_VERSION="7" MAVEN_VERSION="3.3.9"
    - env: BASE_IMAGE="alpine:3.6" JAVA_DISTRIBUTION="openjdk" JAVA_VERSION="7" MAVEN_VERSION="3.5.3"
    - env: BASE_IMAGE="alpine:3.6" JAVA_DISTRIBUTION="openjdk" JAVA_VERSION="8" MAVEN_VERSION="3.5.3"
    - env: BASE_IMAGE="alpine:3.9.3" JAVA_DISTRIBUTION="openjdk" JAVA_VERSION="11" MAVEN_VERSION="3.6.1"

before_cache:
  - go get github.com/tonistiigi/buildcache/cmd/buildcache
  # Save tagged docker images
  - mkdir -p ${HOME}/docker
  - buildcache save -o ${HOME}/docker/cache.tgz ${IMAGE}

before_install:
  - export OS=${BASE_IMAGE//:*/}
  - export IMAGE=mvnd/"${BASE_IMAGE//[^[:alnum:]]/_}-${JAVA_DISTRIBUTION}-${JAVA_VERSION}-${MAVEN_VERSION}"
  # Load cached docker images
  - if [[ -f ${HOME}/docker/cache.tgz ]]; then 
      docker pull "${IMAGE}";
      docker load -i ${HOME}/docker/cache.tgz; 
    fi

cache:
  bundler: true
  directories:
    - ${HOME}/docker
